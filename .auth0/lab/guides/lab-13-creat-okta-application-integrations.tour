{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "#4 - Create Okta Application Integrations",
  "steps": [
    {
      "title": "Lab overview",
      "description": "## Create Okta Application Integrations\n 🎯 **Objective**    Create Okta application integrations for two existing applications. Assign one application to the Customers group and assign one application to the Franchisee group.\n \n  🎬 **Scenario**     Customers and Franchisees require access to a different set of applications.\n\n  ⏱️ **Duration**    15 minutes\n"
    },
    {
      "description": "## Enable Cross-Origin Resource Sharing (CORS)\n\nIn Okta, **CORS** allows JavaScript hosted on your website to make a request using an\n`XMLHttpRequest` to the Okta API. While we aren't hosting the Okta Sign-In Widget when we use the Redirect Model, our sample applications ***do*** call out to Okta's API to close an Okta session and log a user out. Every website origin must be explicitly permitted as a **Trusted Origin** in your Okta org. \n\n1. Ensure you are logged in to the Admin Dashboard as Super Admin.\n\n2. In the Admin menu, navigate to `Security` > `API`\n\n3. Click on the `Trusted Origins`  tab.\n\n4. Click the `Add Origin` button\n\n5. Enter `Okta Ice Portal` into the **Origin name** field.\n\n6. In the **Origin URL** field, enter the value that prints out to the terminal when you click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-8080.app.github.dev\"]).\n\n\n7. Under **Choose Type**, select `Cross-Origin Resource Sharing (CORS)` \n\n6. Click `Save`"
    },
    {
      "title": "Create an Application Integration for the Rewards app",
      "description": "## Create an Application Integration for the Rewards app\nThe Rewards app is an existing application in this project. We're going to set up an integration in Okta so our customers can access this application. We'll talk about the code implementation in subsequent modules.\n\n1. In the Admin menu, navigate to `Applications` > `Applications`\n\n1. Click `Create App Integration`\n\n2. Select the `OIDC - OpenID Connect` radio button.\n\n3. Select the `Single-Page Application` radio button.\n\n4. Click `Next`\n\n5. Enter `Customer Rewards` as the Application integration name\n\n6. In the **Sign-in redirect URIs** field, enter the value that prints out to the terminal when you click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-8080.app.github.dev/redirect/rewards.html\"]).\n\n7. In the **Sign-out redirect URIs** field, enter the value that prints out to the terminal when you click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-8080.app.github.dev\"]).\n\n7. Under **Assignments** click the radio button option for `Limit access to select groups`\n\n8. Type in and select `Customers`\n\n9. Click `Save`",
      "selection": {
        "start": {
          "line": 16,
          "character": 152
        },
        "end": {
          "line": 16,
          "character": 222
        }
      }
    },
    {
      "file": "redirect/rewards.html",
      "description": "## Configure the Rewards application `appClientId`\n\nThe Rewards application makes use of Okta's AuthJS SDK, which we will learn about more in the next module. For now, you'll simply need to configure the ClientID and Okta Org URL to make this integration work.\n\n1. Copy the `Client ID` that was displayed after you saved your integration. \n\n2. Here in VSCode, notice that `rewards.html` has opened for you automatically and the line containing the `appClientID` variable is highlighted. Currently there is a placeholder value of `\"XXXXXXXXXXXXXXXXXXXXXXX\"`\n\n3. Double click the placeholder value to highlight its contents and paste your `Client ID` value so that it is enclosed in the quotes.",
      "line": 18,
      "title": "Configure the Rewards application appClientId",
      "selection": {
        "start": {
          "line": 18,
          "character": 26
        },
        "end": {
          "line": 18,
          "character": 49
        }
      }
    },
    {
      "file": "redirect/rewards.html",
      "description": "## Configure the Rewards application `baseOktaURL`\n\n1. Notice that `rewards.html` is still open, but now the line containg the the `baseOktaURL` variable is highlighted. It contains the placeholder value `https://{domain}.okta.com`\n\n2. In your Okta Admin Dashboard, select your username in the top right hand corner and you should see your Okta org's URL.\n\n2. Hover your mouse over the URL and select **Copy to clipboard**.\n\n3. Back here in the code editor, highlight the placeholder value **excluding** the quotation marks. Ensure your cursor is now between the quotation marks. \n\n4. Paste in the value of your Okta org URL.\n\n6. [Click here to `Save`](command:workbench.action.files.save) your `rewards.html` file.",
      "line": 17,
      "title": "Configure the Rewards application baseOktaURL",
      "selection": {
        "start": {
          "line": 3,
          "character": 153
        },
        "end": {
          "line": 12,
          "character": 1
        }
      }
    },
    {
      "title": "Create an Application Integration for the CRM app",
      "description": "## Create an Application Integration for the CRM app\n\nWe will complete the same steps for the Franchisee app. The one difference is we will assign this app to the Franchisee group. See how many steps you can complete without referring to the instructions!\n\n1. Back in Okta, click `Back to Applications`\n\n2. Click `Create App Integration`\n\n3. Select the `OIDC - OpenID Connect` radio button.\n\n4. Select the `Single-Page Application` radio button.\n\n5. Click `Next`\n\n6. Name this application `Franchisee CRM`\n\n7.  In the **Sign-in redirect URIs** field, enter the value that prints out to the terminal when you click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-8080.app.github.dev/redirect/crm.html\"]).\n\n7. In the **Sign-out redirect URIs** field, enter the value that prints out to the terminal when you click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-8080.app.github.dev\"]).\n\n\n8. Under **Assignments** click the radio button option for `Limit access to select groups`\n\n9. Type in and select `Franchisees`\n\n10. Click `Save`",
      "selection": {
        "start": {
          "line": 19,
          "character": 1
        },
        "end": {
          "line": 20,
          "character": 1
        }
      }
    },
    {
      "file": "redirect/crm.html",
      "description": "## Configure the CRM application `appClientId`\n\n\n1. Copy the `Client ID` that was displayed after you saved your integration. \n\n2. Here in VSCode, notice that `crm.html` has opened for you automatically and the line containing the `appClientID` variable is highlighted. Currently there is a placeholder value of `\"XXXXXXXXXXXXXXXXXXXXXXX\"`\n\n3. Double click the placeholder value to highlight its contents and paste your `Client ID` value so that it is enclosed in the double quotes.\n",
      "line": 18,
      "selection": {
        "start": {
          "line": 1,
          "character": 4
        },
        "end": {
          "line": 1,
          "character": 33
        }
      },
      "title": "Configure the CRM application appClientId"
    },
    {
      "file": "redirect/crm.html",
      "description": "## Configure the CRM application `baseOktaURL`\n\n1. Notice that `crm.html` is still open, but now the line containg the the `baseOktaURL` variable is highlighted. It contains the placeholder value `https://{domain}.okta.com`\n\n2. In your Okta Admin Dashboard, select your username in the top right hand corner and you should see your Okta org's URL.\n\n2. Hover your mouse over the URL and select **Copy to clipboard**.\n\n3. Back here in the code editor, highlight the placeholder value **excluding** the quotation marks. Ensure your cursor is now between the quotation marks. \n\n4. Paste in the value of your Okta org URL.\n\n6. [Click here to `Save`](command:workbench.action.files.save) your `crm.html` file.\n\n7. **Log out** of your Okta org since you will be logging in as a different user in the subsequent steps.",
      "line": 17,
      "title": "Configure the CRM application baseOktaUrl"
    },
    {
      "title": "Start the web server",
      "description": "## Start the web server\n\n1. [Click here to toggle open the Integrated terminal](command:workbench.action.terminal.toggleTerminal) here in VSCode.\n\n2. Notice that the terminal automatically opens to the project directory.\n\n3. You can start a web server on port 8080 by issuing the following command in this terminal:\n\n ```bash\n python3 -m http.server 8080\n ```\n\nIf you don't want to type this in manually, you can alternatively [click here](command:codetour.sendTextToTerminal?[\" python3 -m http.server 8080\"]) to issue the command automatically.\n\nOnce the web server has started successfully, you will see the following message printed to the terminal: \n\n`Serving HTTP on :: port 8080 (http://[::]:8080/) ...`\n\n4.  Select **Make public** in the window that pops up at the bottom right of your environment.",
      "selection": {
        "start": {
          "line": 1,
          "character": 4
        },
        "end": {
          "line": 1,
          "character": 24
        }
      }
    },
    {
      "title": "Test the Rewards app",
      "description": "## Test out the Rewards app\n\nBefore following the directions below, that ensure you are **logged out** of any Okta sessions. **DO NOT use an Incognito browser window** for the steps that follow.\n\n1. In this environement, select the **PORTS** tab. \n\n2. Hover over the **Forwarded Address** column and select the globe icon. This will launch your web app in a new browser tab.\n\n2. Click the `Rewards App (Redirect)` link. You should be redirected to Okta to sign in.\n\n3. Log in as `soraya.esfeh@oktaice.com`.\n\nYou should be redirected back to the Rewards app and you should see some information printed to the page that we will discuss later. For now you can see Soraya's email address at the top as well as your app's Client ID at the bottom.\n"
    },
    {
      "title": "Try to access the CRM app",
      "description": "## Try to access the CRM app\n\n1. Still logged in as Soraya, click `Return to Portal`\n\n2. Click on `CRM App (Redirect)`\n\n3. The CRM application does not load because Soraya is not authorized to access this application. The CRM app is only assigned to users in the `Franchisees` group and she is not a member of that group.\n\n4. Click the `Close Okta Session` button.\n\n5. Click `Return to Portal`"
    },
    {
      "title": "Log in as a Franchisee partner",
      "description": "## Log in as a Franchisee partner\n\nNow we're going to log in as Kay West, who is a member of the Franchisees group.\n\n1. Click on `Rewards App (Redirect)`\n\n2. Enter `kay.west@oktaice.com` as the login and click `Next`\n\n3. Notice that this user did not have an existing session with Okta before trying to access an application that is not assigned to them. In this case, we are not even prompted for a password to authenticate and we are told that the application is not assigned to the user. The user still does not have a session.\n\n4. Click `Return to Portal`\n\n5. Click on `CRM App (Redirect)` \n\n6. Log in as `kay.west@oktaice.com`.\n\nYou should be redirected back to the CRM app and you should see see Kay's email address at the top as well as your app's Client ID at the bottom. \n",
      "selection": {
        "start": {
          "line": 1,
          "character": 4
        },
        "end": {
          "line": 1,
          "character": 34
        }
      }
    },
    {
      "title": "Close the Okta session and shut down the web server",
      "description": "## Close the Okta session\n1. Click the `Close Okta Session` button.\n\n"
    },
    {
      "title": "Lab checkpoint",
      "description": "## ✅ Checkpoint\n\nYou now know how to set up an application integration in Okta.\n\n"
    }
  ]
}